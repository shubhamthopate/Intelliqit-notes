Step 4 (Continuous Testing)
1 Open the dashboard of jenkins
2 Click on Newitem-->Give item name as "Testing"
3 Click on Free style project-->ok
4 The testing team will provide the url of github
  where they have uploaded their automation testing programs
5 Go to source code management-->Click on git
6 Enter the github url of the testing project
  https://github.com/selenium-saikrishna/testing.git
7 Click on apply-->save
8 once the testing code is downloaded into jenkins workspace
  in the target we will find a jar file called testing.jar
  this jar file can execute all the testing programs on the
  application deployed into QA env
9 Go to dashboard of jenkins
10 go to the "Testing" job that we created-->click on downward
   arrow-->configure
11 Go to build section-->click on "add build step"
12 click on execute windows batch command
13 java -jar target/testing.jar
14 apply-->Save


Note:To link the development job with the testing job
1 Go to the dashboard of jenkins
2 Go to development job
3 Click on downwar arrow-->configure
4 Go post build actions-->Click on build other   project-->enter project name as testing
5 click on apply-->save

Step 5 (Continuous Delivary)
We have created2 jobs in jenkins(development,testing)
development has has done the below three activities
1 Downloading the development code from git
2 Creating a war file with the help of maven
3 deploying that war file into the tomcat server
  on qaenvironment
The war file created in step no2 by development job
should be passed to testing job.
This can be done using a plugin called "copy artifact plugin"

1 Open the dashboard of jenkins
2 click on manage jenkins-->manage plugins
3 click on available section--search for copy   artifact plugin and install it
4 Go to the dashboard of jenkins-->go to the   development job-->Go to its configuration page
  go to post build actions-->click on add post build   action-->click on archive the artifacts
  Files to archive----**/*.war
5 apply-->save
6 Go to the dashboard of jenkins-->Go to testing job
7 click on configure-->Go to build section
8 click on add build step-->copy artifacts from   another project
9 enter the project name as Development
10 Apply
11 The war file which has been copied from the
   development job into testing job should be    deployed into tomcat server in prodenv
12 click on post build actions
13 click on add post build actions
14 deploy war/ear to container
15 apply-->save








 























































































